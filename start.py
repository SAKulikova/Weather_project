import fnmatch
import pygame
from pygame import *
import sys
import parsing
import random
import time
import os
#—Ñ—É–Ω–∫—Ü–∏—è –±–∞–Ω–Ω–µ—Ä–∞
def show_banner(screen, status):
    banner_font = pygame.font.SysFont('Verdana', 24)
    if status == "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å":
        phrases = ["–û–±–ª–∞—á–Ω–æ, –≤–æ–∑–º–æ–∂–Ω—ã –æ—Å–∞–¥–∫–∏ –≤ –≤–∏–¥–µ —Ñ—Ä–∏–∫–∞...","–ù–µ –∑–∞–±—É–¥—å —Å–≤–æ–π –∑–æ–Ω—Ç–∏–∫!", "–î–æ–∂–¥–∏–∫ –Ω–µ–±–æ–ª—å—à–æ–π, –∞ –º–æ–∂–µ—Ç –∏ –±–æ–ª—å—à–æ–π","–ù–µ –ø—Ä–æ–º–æ—á–∏ –Ω–æ–≥–∏ –±—Ä–æ","–í–æ–∑—å–º–∏ —Å —Å–æ–±–æ–π –∑–æ–Ω—Ç–∏–∫!"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    elif status == "–Ø—Å–Ω–æ":
        phrases = ["–ù–µ –∑–∞–±—É–¥—å –Ω–∞–Ω–µ—Å—Ç–∏ spf","–ö–∞–∫–æ–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Å–æ–ª–Ω—ã—à–∫–æ!","–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏!","–°–∞–º–æ–µ –≤—Ä–µ–º—è –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è","–ó–∞—â–∏—â–∞–π—Å—è –æ—Ç —Å–æ–ª–Ω—Ü–∞ —Å–µ–≥–æ–¥–Ω—è, –æ–Ω–æ –æ—á–µ–Ω—å —è—Ä–∫–æ–µ!", "–ö–∞–∫–æ–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Å–æ–ª–Ω—ã—à–∫–æ!", "–ù–∞–Ω–µ—Å–∏ –°–ü–§,–∞ —Ç–æ –≤ —Å—Ç–∞—Ä–æ—Å—Ç–∏ –±—É–¥–µ—à—å –∫–∞–∫ –∏–∑—é–º"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    elif status == "–ü–∞—Å–º—É—Ä–Ω–æ":
        phrases = ["–ü–æ—Å–ª—É—à–∞–π –º—É–∑—ã–∫—É –≤ –Ω–∞—É—à–Ω–∏–∫–∞—Ö","–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞–π –¥–µ–Ω—å —è—Ä—á–µ!","–û–¥–µ–≤–∞–π—Å—è —Ç–µ–ø–ª–µ–µ —Å–µ–≥–æ–¥–Ω—è","–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —É—é—Ç–µ –¥–æ–º–∞"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    elif status == "–û–±–ª–∞—á–Ω–æ":
        phrases = [ "–°–µ–≥–æ–¥–Ω—è –æ–±–ª–∞—á–Ω–æ, –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏", "–°–µ–≥–æ–¥–Ω—è –æ–±–µ—â–∞—é—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é –ø–æ–≥–æ–¥—É","–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–±–µ–∂–∫–∏!", "–û–±–ª–∞—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –∏–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–∞"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    elif status == "–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ" or status == "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":
        phrases = ["–ò–Ω–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –æ–±–ª–∞–∫–∞–º–∏", "–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –∑–∞–Ω—è—Ç–∏—è —Å–ø–æ—Ä—Ç–æ–º –Ω–∞ —É–ª–∏—Ü–µ!", "–°–µ–≥–æ–¥–Ω—è –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ –æ–±–ª–∞–∫–æ–≤ - –Ω–∞–Ω–µ—Å–∏ —Å–≤–æ–π spf","–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–±–µ–∂–∫–∏!"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    elif status == "–î—ã–º–∫–∞":
        phrases = ["–¢—É–º–∞–Ω–Ω–æ –æ–¥–Ω–∞–∫–æ, –Ω–æ —ç—Ç–æ –Ω–µ–Ω–∞–¥–æ–ª–≥–æ!","–ü—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ —Ñ–∏–ª—å–º–µ '–°—É–º–µ—Ä–∫–∏'","–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞!"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    elif status == "–°–Ω–µ–≥":
        phrases = ["–ó–∏–º–Ω—è—è —Å–∫–∞–∑–∫–∞!", "–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞, —á—Ç–æ–±—ã –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞", "–û—Ç–ª–∏—á–Ω–∞—è –ø–æ–≥–æ–¥–∞, —á—Ç–æ–±—ã –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —Å–Ω–µ–∂–∫–∏","–°–µ–≥–æ–¥–Ω—è –º–æ–∂–Ω–æ –ª–æ–≤–∏—Ç—å —Å–Ω–µ–∂–∏–Ω–∫–∏ —è–∑—ã–∫–æ–º!","–•–æ–ª–æ–¥–Ω–∞—è –∑–∏–º–∞, –Ω–µ —Ç–∞–∫ –ª–∏?"]
        banner_text = banner_font.render(random.choice(phrases), True, (255, 255, 255))
    else:
        banner_text = banner_font.render("–ü–∞—Ä—ã? –ù–µ—Ç, –Ω–µ —Å–ª—ã—à–∞–ª–∏...", True, (255, 255, 255))
    banner_rect = banner_text.get_rect(center=(screen.get_width() // 2, screen.get_height() // 2))
    pygame.draw.rect(screen, (color_4), (120, 195, 640, 110), 0, 25)
    pygame.draw.rect(screen, (color_6), (130, 205, 620, 90), 0, 15)
    screen.blit(banner_text, banner_rect.topleft)

    close_button_font = pygame.font.SysFont('Arial', 20, bold=True)
    close_button_text = close_button_font.render('X', True, (255,0,0))
    close_button_rect = pygame.Rect(729, 210, 20, 20)  # –°–¥–µ–ª–∞–µ–º close_button_rect –æ–±—ä–µ–∫—Ç–æ–º Rect
    pygame.draw.rect(screen, (color_6), close_button_rect, 0, 10)
    screen.blit(close_button_text, close_button_rect)

    return close_button_rect

clock = pygame.time.Clock()
pygame.init()
size = [880, 500]
change_rect = 1
change_rect_sec  = 0
color_1 = [163,190,255]#—Ñ–æ–Ω
color_2 = [21,52,102] #–±–æ–ª—å—à–∏–µ –∫–≤–∞–¥—Ä–∞—Ç—ã
color_3 = [98,10,255] #–¥–Ω–∏ –∏ –≤—Ä–µ–º—è
color_4 = [52, 21, 102] #–±–æ–ª—å—à–æ–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π 52, 21, 102
color_5 = [122,51,255] #—Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏
color_6 = [120, 47, 194] #–∫–≤–∞–¥—Ä–∞—Ç—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ 120, 47, 194
alpha_value = 0

"""–º—É–∑—ã–∫–∞"""
pygame.mixer.music.load("music/music.mp3")
pygame.mixer.music.play(-1)
pygame.mixer.music.set_volume(1)
ef_1 = pygame.mixer.Sound('music/push.mp3')
sound = True
label_emoji = pygame.font.Font('font/seguiemj.ttf', 20)
menu_set_music_on_label = label_emoji.render("üîä", False, "White", color_3)
menu_set_music_off_label = label_emoji.render("üîà  ", False, "White", color_3)


"""–º–µ–º—ã"""
#–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ø–æ–∫
def direct(path):
    entries = os.listdir(path)
    directories = [entry for entry in entries if os.path.isdir(os.path.join(path, entry))]
    return directories

#–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–Ω–≥ —Ñ–∞–π–ª–æ–≤
def direct_2(path):
    entries = os.listdir(path)
    png_files = [entry for entry in entries if fnmatch.fnmatch(entry, '*.png') and os.path.isfile(os.path.join(path, entry))]
    return png_files

mems = {}
path = direct("images")
for i in range(len(path)): #—Ä—ç–Ω–∂ —Ä–∞–≤–µ–Ω –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∞–ø–æ–∫ —Å –º–µ–º–∞–º–∏
    mems[path[i]] = []
    for j in range(len(direct_2(f"images/{path[i]}"))): #—Ä—ç–Ω–∂ —Ä–∞–≤–µ–Ω –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–µ–º–æ–≤ –≤ –ø–∞–ø–∫–µ
        mems[path[i]].append(pygame.image.load(f"images/{path[i]}/{direct_2(f'images/{path[i]}')[j]}"))
print(mems)

screen = pygame.display.set_mode(size)
pygame.display.set_caption("–ü–æ–≥–æ–¥–∞")
screen.fill(color_1)


font_1 = pygame.font.SysFont('Verdana', 18, bold=True)
temp_font = pygame.font.SysFont('Impact', 90)
prec_font = pygame.font.SysFont('Impact', 28)
phrase_font = pygame.font.SysFont('font/Comic Sans MS.ttf', 30)

change_day = True
change_time = True
change_for_mem = True

parsind_data = parsing.parsing_weather_days()
weather_week = parsing.parsing_weather_week()
time_on_day = parsind_data[0]
temperature_on_day = parsind_data[1]
precipitation_on_day = parsind_data[2]
pressure_on_day = parsind_data[3]
humidity_on_day = parsind_data[4]
wind_with_spaces = parsind_data[5]
status_on_day = parsind_data[6]

change_rect_sec = int(((min([0, 3, 6, 9, 12, 15, 18, 21], key=lambda x: abs(x - int(time.strftime("%H", time.localtime())))))/3)+1) #–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤ –ø–æ–≥–æ–¥–µ

# –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä
close_button_rect = show_banner(screen, status_on_day[0][change_rect_sec])
pygame.display.update()

banner_shown = True
while banner_shown:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        elif event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            if close_button_rect.collidepoint(event.pos):
                banner_shown = False


while True:
    screen.fill(color_1)
    # —Ü–µ –¥–∏–∑–∞–π–Ω. –±–∏–≥ —Ä–µ–∫—Ç
    pygame.draw.rect(screen, color_2, (20, 20, 220, 460), 0,24)
    pygame.draw.rect(screen, color_2, (260, 20, 600, 65),0,16)
    pygame.draw.rect(screen, color_4, (260, 105, 350, 375),0,16)

    # —Ü–µ –¥–∏–∑–∞–π–Ω. –¥—ç–π—Å –æ–Ω –≤–∏–∫
    y_rect = 30
    for i in range(7):
        if change_rect == i+1:
            pygame.draw.rect(screen, color_5, (30, y_rect, 200, 54), 0, 14)
        else:
            pygame.draw.rect(screen, color_3, (30, y_rect, 200, 54), 0, 14)
        text1 = font_1.render(weather_week[i].split()[0], True, (238, 238, 238))
        text2 = font_1.render(weather_week[i].split()[1]+' '+ weather_week[i].split()[2], True, (238, 238, 238))
        screen.blit(text1, (42, y_rect + 3))
        screen.blit(text2, (42, y_rect+26))
        y_rect = y_rect + 64

    x_rect = 270
    for i in range(8):
        if change_rect_sec == i + 1:
            pygame.draw.rect(screen, color_5, (x_rect - 2, 28, 66, 48), 0, 6)
        else:
            pygame.draw.rect(screen, color_3, (x_rect - 2, 28, 66, 48), 0, 6)
        text3 = pygame.font.SysFont('Verdana', 17, bold=True).render(time_on_day[i], True, (238, 238, 238))
        screen.blit(text3, (x_rect+2, 40))
        x_rect = x_rect + 74

    #(x,y, —à–∏—Ä–∏–Ω–∞, –≤—ã—Å–æ—Ç–∞)
    pygame.draw.rect(screen, color_6, (270, 115, 150, 150), 0, 6) #—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    pygame.draw.rect(screen, color_6, (270, 275, 150, 95), 0, 6)  # –≤–µ—Ç–µ—Ä
    pygame.draw.rect(screen, color_6, (430, 115, 170, 95), 0, 6)  # —Å—Ç–∞—Ç—É—Å
    pygame.draw.rect(screen, color_6, (430, 220, 170, 130), 0, 6)  # –æ—Å–∞–¥–∫–∏
    pygame.draw.rect(screen, color_6, (270, 380, 150, 90), 0, 6)  # –≤–ª–∞–∂–Ω–æ—Å—Ç—å
    pygame.draw.rect(screen, color_6, (430, 360, 170, 110), 0, 6)  # –¥–∞–≤–ª–µ–Ω–∏–µ

    try:
        if change_for_mem == True and (status_words[0] == '–ü–∞—Å–º—É—Ä–Ω–æ' or status_words[1]=='–æ–±–ª–∞—á–Ω–æ—Å—Ç—å'):
            change_for_mem = False
            index_mem = random.randint(0, len(mems["Pasmurno"])-1)
            # print(index_mem)
        if status_words[0] == "–ü–∞—Å–º—É—Ä–Ω–æ" or status_words[1]=="–æ–±–ª–∞—á–Ω–æ—Å—Ç—å":
            screen.blit(mems["Pasmurno"][index_mem], (620, 110))
    except:
        pass

    try:
        if change_for_mem == True and (status_words[0] == '–î–æ–∂–¥—å' or status_words[1]=='–¥–æ–∂–¥—å'):
            change_for_mem = False
            index_mem = random.randint(0, len(mems["Rain"])-1)
            # print(index_mem)
        if (status_words[0] == "–î–æ–∂–¥—å" or status_words[1]=="–¥–æ–∂–¥—å"):
            screen.blit(mems["Rain"][index_mem], (620, 110))
    except:
        pass

    try:
        if change_for_mem == True and status_words[0] == '–Ø—Å–Ω–æ':
            change_for_mem = False
            index_mem = random.randint(0, len(mems["Yasno"])-1)
        if status_words[0] == "–Ø—Å–Ω–æ":
            screen.blit(mems["Yasno"][index_mem], (620, 110))
    except:
        pass

    try:
        if change_for_mem == True and status_words[0] == '–î—ã–º–∫–∞':
            change_for_mem = False
            index_mem = random.randint(0, len(mems["Fog"])-1)
            # print(index_mem)
        if status_words[0] == "–î—ã–º–∫–∞":
            screen.blit(mems["Fog"][index_mem], (620, 110))
    except:
        pass

    try:
        if change_for_mem == True and status_words[0] == '–°–Ω–µ–≥':
            change_for_mem = False
            index_mem = random.randint(0, len(mems["Snow"])-1)
            # print(index_mem)
        if status_words[0] == "–°–Ω–µ–≥":
            screen.blit(mems["Snow"][index_mem], (620, 110))
    except:
        pass

    try:
        if change_for_mem == True and (status_words[0] == '–û–±–ª–∞—á–Ω–æ'or status_words[0]=='–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ'):
            change_for_mem = False
            index_mem = random.randint(0, len(mems["Oblachno"])-1)
            # print(index_mem)
        if (status_words[0] == "–û–±–ª–∞—á–Ω–æ" or status_words[0]=="–ú–∞–ª–æ–æ–±–ª–∞—á–Ω–æ"):
            screen.blit(mems["Oblachno"][index_mem], (620, 110))
    except:
        pass

    if change_day == True and change_time == True:
        index_day = change_rect
        index_time = change_rect_sec

        #–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        status_words = status_on_day[index_day - 1][index_time - 1].replace('–Ø—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞', '–Ø—Å–Ω–æ').split()
        x, y = 440, 120
        for word in status_words:
            text_word = pygame.font.SysFont('Impact', 26).render(word, True, (238, 238, 238))
            screen.blit(text_word, (x, y))
            y += text_word.get_height() + 5
        current_status = status_words[0]

        #–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        phrase_temperature = phrase_font.render('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:', True, (238, 238, 238))
        screen.blit(phrase_temperature, (280, 125))
        text_temperature = temp_font.render(temperature_on_day[index_day-1][index_time-1], True, (238, 238, 238))
        screen.blit(text_temperature, (273, 150))

        #–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Å–∞–¥–∫–æ–≤
        phrase_precipitation = '–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–∞–¥–µ–Ω–∏—è –æ—Å–∞–¥–∫–æ–≤:'
        num = str(precipitation_on_day[index_day - 1][index_time - 1])
        # –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–æ–≤
        x, y = 440, 230
        words = phrase_precipitation.split()
        # –í—ã–≤–æ–¥ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
        for word in words:
            text_word = phrase_font.render(word, True, (238, 238, 238))
            screen.blit(text_word, (x, y))
            y += text_word.get_height() + 5 # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏
        text_num = prec_font.render(num, True, (238, 238, 238))
        screen.blit(text_num, (x, 305))

        #–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–∞–≤–ª–µ–Ω–∏—è
        phrase_pressure = phrase_font.render('–î–∞–≤–ª–µ–Ω–∏–µ:', True, (238, 238, 238))
        screen.blit(phrase_pressure, (440, 370))
        words = f'{pressure_on_day[index_day-1][index_time-1]} —Ä—Ç.—Å—Ç.'.split()
        x, y = 440, 395
        # –í—ã–≤–æ–¥ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
        for word in words:
            text_word = prec_font.render(word, True, (238, 238, 238))
            screen.blit(text_word, (x, y))
            y += text_word.get_height() - 5 # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏

        #–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞
        phrase_humidity = '–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞:'
        num = str(humidity_on_day[index_day - 1][index_time - 1])
        x, y = 280, 390
        words = phrase_humidity.split()
        # –í—ã–≤–æ–¥ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
        for word in words:
            text_word = phrase_font.render(word, True, (238, 238, 238))
            screen.blit(text_word, (x, y))
            y += text_word.get_height() + 2  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏
        text_num = prec_font.render(num, True, (238, 238, 238))
        screen.blit(text_num, (280, y))

        #–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤–µ—Ç—Ä–∞
        phrase_wind = phrase_font.render('–í–µ—Ç–µ—Ä:', True, (238, 238, 238))
        screen.blit(phrase_wind, (280, 285))
        parts = f'{wind_with_spaces[index_day - 1][index_time - 1]}  –º/c'.split()
        x, y = 280, 310
        # –í—ã–≤–æ–¥ –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
        for part in parts:
            if part == '–í–µ—Ç–µ—Ä:':
                text_part = prec_font.render(part, True, (238, 238, 238))
                screen.blit(text_part, (x, y))
                y += text_part.get_width() + 1  # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã y –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏
            else:
                text_part = prec_font.render(part, True, (238, 238, 238))
                screen.blit(text_part, (x, y))
                x += text_part.get_width() + 3  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏

    if sound == True:
        menu_set_music_on_label_rect = menu_set_music_on_label.get_rect()
        menu_set_music_on_label_rect.center = (860, 480)
        screen.blit(menu_set_music_on_label, menu_set_music_on_label_rect)
    if sound == False:
        menu_set_music_off_label_rect = menu_set_music_off_label.get_rect()
        menu_set_music_off_label_rect.center = (860, 480)
        screen.blit(menu_set_music_off_label, menu_set_music_off_label_rect)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.MOUSEBUTTONDOWN:
            for i in range(7):
                if 30 < event.pos[0] < 230 and 30 + 64*i < event.pos[1] < 84 + 64*i:
                    change_rect = i+1
                    ef_1.play()
                    change_day = True

        if event.type == pygame.MOUSEBUTTONDOWN and change_day == True:
            for i in range(8):
                if 270 + 74*i < event.pos[0] < 334+74*i and 28 < event.pos[1] < 76:
                    change_rect_sec = i+1
                    ef_1.play()
                    change_for_mem = True
                    change_time = True

        if event.type == pygame.MOUSEBUTTONDOWN:
            if 845 < event.pos[0] < 875 and 465 < event.pos[1] < 495:
                if sound == True:
                    pygame.mixer.music.pause()
                    sound = False
                elif sound == False:
                    pygame.mixer.music.unpause()
                    sound = True
        if event.type == pygame.MOUSEMOTION:
            coor = event.pos

    pygame.display.update()
    clock.tick(60)